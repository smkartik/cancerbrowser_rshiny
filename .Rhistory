hcd <- as.dendrogram(hc)
par(cex=0.9) # Set dendrogram label size
plot(hcd, main='RNASeq')
cell_line_order <- rownames(dft)#[hc$order]
# Get cell line categories
dc <- read_csv('cell_lines_categories.cgp1sv')
dc2 <- dc[dc$Sample %in% cell_line_order, ]
# Sort dc2 by cell line order
dc3 <- dc2[match(cell_line_order, dc2$Sample), ]
colors = add.alpha(as.character(dc3$color_map), 0.7)
colored_bars(colors=colors, dend=hcd, rowLabels="")
ggplot(hcd, main='RNASeq')
colored_bars(colors=colors, dend=hcd, rowLabels="")
ggdendrogram(hcd, main='RNASeq')
cell_line_order <- rownames(dft)#[hc$order]
# Get cell line categories
dc <- read_csv('cell_lines_categories.cgp1sv')
dc2 <- dc[dc$Sample %in% cell_line_order, ]
# Sort dc2 by cell line order
dc3 <- dc2[match(cell_line_order, dc2$Sample), ]
colors = add.alpha(as.character(dc3$color_map), 0.7)
colored_bars(colors=colors, dend=hcd, rowLabels="")
dend <- as.dendrogram(hc)
# Extract the data (for rectangular lines)
# Type can be "rectangle" or "triangle"
dend_data <- dendro_data(dend, type = "rectangle")
# What contains dend_data
names(dend_data)
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3)+
ylim(-3, 15)
p
p1 <- plot(hcd, main='RNASeq')
p1 <- ggdendrogram(hc)
p1
p2<-ggplot(df2,aes(states,y=1,fill=factor(cluster)))+geom_tile()+
scale_y_continuous(expand=c(0,0))+
theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
gp1<-ggplotGrob(p1)
gp2<-ggplotGrob(p2)
library(cowplot)
plot_grid(gp1, gp2, ncol=1, align="v")
p2 <- ggplot(dc3, aes(Sample, y=1))
p2
p2 <- ggplot(dc3, aes(Sample, y=1)) +scale_fill_manual(as.character(dc3$color_map))
p2
p2 <- ggplot(dc3, aes(Sample, y=1)) +geom_tile() +scale_fill_manual(as.character(dc3$color_map))
p2
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1")
ggplot(dc3, aes(x=Sample, y=1, fill=color_map)) +geom_tile()
ggplot(dc3, aes(x=Sample, y=0.2, fill=color_map)) +geom_tile()
View(dc3)
ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + scale_fil_manual(as.character(dc3$color_map))
ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + scale_fill_manual(as.character(dc3$color_map))
ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile()
ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + scale_fill_manual(values=rs_colors)
rs_colors = add.alpha(as.character(dc3$colo_map), 0.7)
rs_colors = add.alpha(as.character(dc3$color_map), 0.7)
ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + scale_fill_manual(values=rs_colors)
ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile()
d1 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile()
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile()
p1
plot_grid(p1, p2, ncol=1, align="v")
p2 <- ggplot(dc3, aes(x=Sample, y=0.2)) +geom_tile()
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile()
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none")
p2
plot_grid(p1, p2, ncol=1, align="v")
p2 <- ggplot(dc3, aes(x=Sample, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none")
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none")
p2
dc2
dc3
p2 <- ggplot(dc3, aes(x=rownames(dc3), y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none")
p2
p2 <- ggplot(dc3, aes(x=rownames(dc3), y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") +ylab("")
p2
p2 <- ggplot(dc3, aes(x=rownames(dc3), y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") +ylab("") + scale_y_continuous(expand = c(0,0))
p2
p2 <- ggplot(dc3, aes(x=rownames(dc3), y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") +ylab("") + scale_x_continuous(expand = c(0,0))
p2 <- ggplot(dc3, aes(x=rownames(dc3), y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") +ylab("") + scale_y_continuous(expand = c(0,0))
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none")
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + scale_y_continuous()
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + scale_x_continuous()
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + scale_y_continuous(c=(0, 0.1))
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + scale_x_continuous(expand=c(0.1, 0.1))
o2
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + scale_x_continuous(expand=c(0, 0))
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + scale_x_continuous(expand=c(0, 0))
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none")
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + scale_y_continuous(expand=c(0, 0))
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + scale_y_continuous(expand=c(1, 1))
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + scale_x_continuous(expand=c(1, 1))
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + theme_void()
p
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + theme_void() + theme(legend.position="none")
p2
plot_grid(p1, p2, ncol=1, align="v")
grid.arrange(p1, p2, ncol=1,heights=c(9/10,1/10))
gp1<-ggplotGrob(p1)
gp2<-ggplotGrob(p2)
maxWidth = grid::unit.pmax(gp1$widths[2:5], gp2$widths[2:5])
gp1$widths[2:5] <- as.list(maxWidth)
gp2$widths[2:5] <- as.list(maxWidth)
grid.arrange(gp1, gp2, ncol=1,heights=c(4/5,1/5))
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="None") +scale_y_continuous(expand=c(0,0))+
theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
p2
library(gridExtra)
gp1<-ggplotGrob(p1)
gp2<-ggplotGrob(p2)
maxWidth = grid::unit.pmax(gp1$widths[2:5], gp2$widths[2:5])
gp1$widths[2:5] <- as.list(maxWidth)
gp2$widths[2:5] <- as.list(maxWidth)
grid.arrange(p1, p2, ncol=1,heights=c(9/10,1/10))
library(gridExtra)
gp1<-ggplotGrob(p1)
gp2<-ggplotGrob(p2)
maxWidth = grid::unit.pmax(gp1$widths[2:5], gp2$widths[2:5])
#gp1$widths[2:5] <- as.list(maxWidth)
gp2$widths[2:5] <- as.list(maxWidth)
grid.arrange(p1, p2, ncol=1,heights=c(9/10,1/10))
p1 <- p1 + scale_y_continuous(expand=c(0,0))
p1 <- ggdendrogram(hc)
p
p2
pp1
p1
p1 <= ggdendrogram(hc) +   scale_y_continuous(expand=c(0,0))+
theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
p1 <= ggdendrogram(hc) +
theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
p1 <- ggdendrogram(hc)
p1$layout$panel_params[[1]]$x.range
p1$layout
p1
gp1<-ggplotGrob(p1)
gp2<-ggplotGrob(p2)
gp1$widths
gp2$widths
gp1$layout
gp1$layout$panel_params[[1]]$x.range
gp1$layout$panel_params
gp1$layout
gp2$layout
gp1$layout
gp1$layout$panel_params
gp1$layout$panel
gp1$layout$name
dend <- as.dendrogram(hc)
# Extract the data (for rectangular lines)
# Type can be "rectangle" or "triangle"
dend_data <- dendro_data(dend, type = "rectangle")
# What contains dend_data
names(dend_data)
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3)
p
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-3)
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-3, 450)
p
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-50, 450)
p
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-70, 450)
p
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450)
p
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) +theme.void()
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) +theme_void()
p
gp1<-ggplotGrob(p)
gp2<-ggplotGrob(p2)
maxWidth = grid::unit.pmax(gp1$widths[2:5], gp2$widths[2:5])
gp1$widths[2:5] <- as.list(maxWidth)
gp2$widths[2:5] <- as.list(maxWidth)
grid.arrange(gp1, gp2, ncol=1,heights=c(9/10,1/10))
dc2
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) +theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
p
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) +theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")  + scale_y_continuous(expand=c(0,0))
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) +theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")  + scale_x_continuous(expand=c(0,0))
p
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) +theme.void() + scale_x_continuous(expand=c(0,0))
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) +theme_void() + scale_x_continuous(expand=c(0,0))
p
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) +theme_void() + scale_x_continuous(expand=c(1,1))
p
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) +theme_void() + scale_x_continuous(expand=c(0.9,0.9))
p
p <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) +theme_void() + scale_x_continuous(expand=c(0.1,0.1))
p
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="None") +scale_x_continuous(expand=c(0.1,0.1))+
theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="None") +scale_x_continuous(expand=c(0.1,0.1))+
theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
p1 <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450)
+ theme_void() + scale_x_continuous(expand=c(0.1,0.1))
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status))
+ geom_tile() + theme(legend.position="None")
#+ scale_x_continuous(expand=c(0.1,0.1))
+ theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
p1 <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450)
+ theme_void() + scale_x_continuous(expand=c(0.1,0.1))
p1 <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))
p1 <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450)
p1 <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) + theme_void() + scale_x_continuous(expand=c(0.1,0.1))
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status))
+ geom_tile() + theme(legend.position="None")
#+ scale_x_continuous(expand=c(0.1,0.1))
+ theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status))
+ geom_tile() + theme(legend.position="None")
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status))
+ geom_tile() + theme(legend.position="None")
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + theme_void() + theme(legend.position="none")
> p2
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none") + theme_void() + theme(legend.position="none")
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status))
+ geom_tile() + theme(legend.position="none")
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none")
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() + theme(legend.position="none")
#+ scale_x_continuous(expand=c(0.1,0.1))
+ theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() +
theme(legend.position="none") + theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
gp1<-ggplotGrob(p)
gp2<-ggplotGrob(p2)
maxWidth = grid::unit.pmax(gp1$widths[2:5], gp2$widths[2:5])
gp1$widths[2:5] <- as.list(maxWidth)
gp2$widths[2:5] <- as.list(maxWidth)
grid.arrange(gp1, gp2, ncol=1,heights=c(9/10,1/10))
p1 <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) + theme_void() + scale_x_continuous(expand=c(0.01,0.01))
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() +
theme(legend.position="none") + theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
gp1<-ggplotGrob(p)
gp2<-ggplotGrob(p2)
maxWidth = grid::unit.pmax(gp1$widths[2:5], gp2$widths[2:5])
gp1$widths[2:5] <- as.list(maxWidth)
gp2$widths[2:5] <- as.list(maxWidth)
grid.arrange(gp1, gp2, ncol=1,heights=c(9/10,1/10))
p1 <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) + theme_void() + scale_x_continuous(expand=c(0,0))
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() +
theme(legend.position="none") + theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
gp1<-ggplotGrob(p1)
gp2<-ggplotGrob(p2)
maxWidth = grid::unit.pmax(gp1$widths[2:5], gp2$widths[2:5])
gp1$widths[2:5] <- as.list(maxWidth)
gp2$widths[2:5] <- as.list(maxWidth)
grid.arrange(gp1, gp2, ncol=1,heights=c(9/10,1/10))
p1 <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) + theme_void() + scale_x_continuous(expand=c(0.05,0.05))
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() +
theme(legend.position="none") + theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
gp1<-ggplotGrob(p1)
gp2<-ggplotGrob(p2)
maxWidth = grid::unit.pmax(gp1$widths[2:5], gp2$widths[2:5])
gp1$widths[2:5] <- as.list(maxWidth)
gp2$widths[2:5] <- as.list(maxWidth)
grid.arrange(gp1, gp2, ncol=1,heights=c(9/10,1/10))
library(synapser)
synLogin()
library(data.table)
library(fastcluster)
library(ggdendro)
library(dendextend)
add.alpha <- function(col, alpha=1){
if(missing(col))
stop("Please provide a vector of colours.")
apply(sapply(col, col2rgb)/255, 2,
function(x)
rgb(x[1], x[2], x[3], alpha=alpha))
}
gene_types <- synGet('syn9846154')
dfg <- read.table(gene_types$path,stringsAsFactors = TRUE,
sep=',', header=TRUE)
coding_genes = as.character(dfg[dfg$gene_biotype == 'protein_coding', ]$hgnc_symbol)
# Get RNASeq file
file <- synGet('syn7080753')
dfr <- read.table(file$path, stringsAsFactor = TRUE,
header=TRUE, row.names='id')
df <- dfr[rownames(dfr) %in% coding_genes, ]
dft <- transpose(df)
rownames(dft) <- colnames(df)
colnames(dft) <- rownames(df)
dd <- dist(dft, method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
hcd <- as.dendrogram(hc)
par(cex=0.9) # Set dendrogram label size
ggdendrogram(hcd, main='RNASeq')
cell_line_order <- rownames(dft)#[hc$order]
# Get cell line categories
dc <- read_csv('cell_lines_categories.cgp1sv')
dc2 <- dc[dc$Sample %in% cell_line_order, ]
# Sort dc2 by cell line order
dc3 <- dc2[match(cell_line_order, dc2$Sample), ]
colors = add.alpha(as.character(dc3$color_map), 0.7)
colored_bars(colors=colors, dend=hcd, rowLabels="")
#------------------
p1 <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) + theme_void() + scale_x_continuous(expand=c(0.01,0.01))
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() +
theme(legend.position="none") + theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
gp1<-ggplotGrob(p1)
gp2<-ggplotGrob(p2)
maxWidth = grid::unit.pmax(gp1$widths[2:5], gp2$widths[2:5])
gp1$widths[2:5] <- as.list(maxWidth)
gp2$widths[2:5] <- as.list(maxWidth)
grid.arrange(gp1, gp2, ncol=1,heights=c(9/10,1/10))
p1 <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) + theme_void() + scale_x_continuous(expand=c(0.01,0.01))
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() +
theme(legend.position="none") + theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
gp1<-ggplotGrob(p1)
gp2<-ggplotGrob(p2)
maxWidth = grid::unit.pmax(gp1$widths[2:5], gp2$widths[2:5])
gp1$widths[2:5] <- as.list(maxWidth)
gp2$widths[2:5] <- as.list(maxWidth)
grid.arrange(gp1, gp2, ncol=1,heights=c(9/10,1/10))
p1 <- ggplot(dend_data$segments) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))+
geom_text(data = dend_data$labels, aes(x, y, label = label),
hjust = 1, angle = 90, size = 3) +ylim(-100, 450) + theme_void() + scale_x_continuous(expand=c(0.02,0.02))
p2 <- ggplot(dc3, aes(x=Sample, y=0.2, fill=Receptor_Status)) +geom_tile() +
theme(legend.position="none") + theme(axis.title=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank(),
legend.position="none")
gp1<-ggplotGrob(p1)
gp2<-ggplotGrob(p2)
maxWidth = grid::unit.pmax(gp1$widths[2:5], gp2$widths[2:5])
gp1$widths[2:5] <- as.list(maxWidth)
gp2$widths[2:5] <- as.list(maxWidth)
grid.arrange(gp1, gp2, ncol=1,heights=c(9/10,1/10))
dc3
cell_line_order <- rownames(dft)[hc$order]
# Get cell line categories
dc <- read_csv('cell_lines_categories.cgp1sv')
dc2 <- dc[dc$Sample %in% cell_line_order, ]
# Sort dc2 by cell line order
dc3 <- dc2[match(cell_line_order, dc2$Sample), ]
colors = add.alpha(as.character(dc3$color_map), 0.7)
library(synapser)
synLogin()
library(data.table)
library(fastcluster)
library(ggdendro)
library(dendextend)
add.alpha <- function(col, alpha=1){
if(missing(col))
stop("Please provide a vector of colours.")
apply(sapply(col, col2rgb)/255, 2,
function(x)
rgb(x[1], x[2], x[3], alpha=alpha))
}
gene_types <- synGet('syn9846154')
dfg <- read.table(gene_types$path,stringsAsFactors = TRUE,
sep=',', header=TRUE)
coding_genes = as.character(dfg[dfg$gene_biotype == 'protein_coding', ]$hgnc_symbol)
# Get RNASeq file
file <- synGet('syn7080753')
dfr <- read.table(file$path, stringsAsFactor = TRUE,
header=TRUE, row.names='id')
df <- dfr[rownames(dfr) %in% coding_genes, ]
dft <- transpose(df)
View(dft)
